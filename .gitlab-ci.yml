# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/wsp

stages:
  - clean
  - build
  - test
  - deploy

build:alltests_pi:
  tags:
  - raspberrypi
  
  only:
   - schedules
   - merge_requests
  
  stage: build
  script:
    - rm -f $CI_PROJECT_DIR/test/unit/bin/*
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - cmake --build . --target test_all_unit
  artifacts:
    paths:
    - $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src
    - $CI_PROJECT_DIR/test/unit/bin
  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build
  when: manual

test:alltests_pi:
  tags:
  - raspberrypi

  only:
   - schedules
   - merge_requests

  stage: test
  before_script:
    - sudo killall 'weatherStationPlus' || echo "No process found"
  script:
      - cd test/unit/bin
      - sudo ./test_all_unit --gtest_filter=*:-RetrieveSensorData.store_* --gtest_output="xml:report.xml"
      - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src/
      - cd $CI_PROJECT_DIR/build
      - mkdir coverage
      - gcovr -r .. -e "../include/easylogging*" -e "../src/logging/*" --html --html-details -o coverage/weatherstation.html
      - gcovr -r .. -e "../include/easylogging*" -e "../src/logging/*"
  dependencies: 
    - build:alltests_pi
  artifacts:
    paths:
      - $CI_PROJECT_DIR/build/coverage
    reports:
      junit: $CI_PROJECT_DIR/test/unit/bin/report.xml
  when: manual

clean_docker:
  tags:
    - crossplatform

  only:
   - schedules
   - merge_requests

  stage: clean

  script: 
   - docker-compose down
   - docker-compose up -d

build:alltests_quick:
  tags:
  - crossplatform
  
  only:
   - schedules
   - merge_requests
  
  stage: build
  script:
    - docker cp . arm_v6_raspberrypi_one:/home/gitlab-runner/builds/wsp
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/builds/wsp && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug .."
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/builds/wsp && mkdir -p build && cd build && cmake --build . --target test_all_unit -j 4"
    - docker cp arm_v6_raspberrypi_one:/home/gitlab-runner/builds/wsp/test/unit/bin/test_all_unit test/unit/bin/test_all_unit
    - mkdir -p build/test/CMakeFiles/test_all_unit.dir/__/
    - docker cp arm_v6_raspberrypi_one:/home/gitlab-runner/builds/wsp/build/test/CMakeFiles/test_all_unit.dir/__/src build/test/CMakeFiles/test_all_unit.dir/__/src

  artifacts:
    paths:
      - $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src
      - $CI_PROJECT_DIR/test/unit/bin/test_all_unit

test:alltests_quick:
  tags:
  - raspberrypi

  only:
   - schedules
   - merge_requests

  stage: test
  before_script:
    - sudo killall 'weatherStationPlus' || echo "No process found"
  script:
    - cd test/unit/bin
    - sudo -E ./test_all_unit --gtest_filter=*:-RetrieveSensorData.store_* --gtest_output="xml:report.xml"
    - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src/
    - cd $CI_PROJECT_DIR/build
    - mkdir coverage
    - gcovr -r .. -e "../include/easylogging*" -e "../src/logging/*" --html --html-details -o coverage/weatherstation.html
    - gcovr -r .. -e "../include/easylogging*" -e "../src/logging/*"
  dependencies: 
    - build:alltests_quick
  artifacts:
    paths:
      - $CI_PROJECT_DIR/build/coverage
    reports:
      junit: $CI_PROJECT_DIR/test/unit/bin/report.xml

  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build

build:mainapp_quick:
  tags:
    - crossplatform

  only:
    - schedules
    - merge_requests

  stage: build
  script:
    - docker cp . arm_v6_raspberrypi_one:/home/gitlab-runner/builds/wsp/
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/builds/wsp && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug .."
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/builds/wsp && mkdir -p build && cd build && cmake --build . --target weatherStationPlus -j 4"
    - mkdir -p bin/debug
    - docker cp arm_v6_raspberrypi_one:/home/gitlab-runner/builds/wsp/bin/debug/weatherStationPlus bin/debug/

  artifacts:
    paths:
      - $CI_PROJECT_DIR/bin/debug/weatherStationPlus

deploy:
  tags:
    - raspberrypi

  only:
    - schedules
    - merge_requests

  stage: deploy
  before_script:
    - sudo systemctl stop wsp.service || echo "Failed to stop service"
  script:
    - sudo cp bin/debug/weatherStationPlus /opt/wsp/weatherStationPlus
    - sudo cp wsp.service /etc/systemd/system/
    - sudo systemctl daemon-reload
    - sudo systemctl start wsp.service
    - sleep 5s
    - sudo systemctl is-active --quiet wsp
  dependencies:
    - build:mainapp_quick
  environment:
    name: staging

deploy_weatherstation:
  tags:
    - weatherstation

  only:
    - schedules
    - merge_requests

  stage: deploy
  before_script:
    - sudo systemctl stop wsp.service || echo "Failed to stop service"
  script:
    - sudo cp bin/debug/weatherStationPlus /opt/wsp/weatherStationPlus
    - sudo cp wsp.service /etc/systemd/system/
    - sudo systemctl daemon-reload
    - sudo systemctl start wsp.service
    - sleep 5s
    - sudo systemctl is-active --quiet wsp
  dependencies:
    - build:mainapp_quick
  environment:
    name: live
  when: manual