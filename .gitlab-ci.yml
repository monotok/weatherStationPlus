# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/wsp

stages:
  - clean
  - build
  - test
  - deploy

build:alltests_pi:
  tags:
  - raspberrypi
  
  only:
   - schedules
   - merge_requests
  
  stage: build
  script:
    - rm -f $CI_PROJECT_DIR/test/unit/bin/*
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - cmake --build . --target test_all_unit
  artifacts:
    paths:
    - $CI_PROJECT_DIR/build/test/test_all_unit
    - $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src
    - $CI_PROJECT_DIR/test/unit/bin

test:alltests_pi:
  tags:
  - raspberrypi

  only:
   - schedules
   - merge_requests
  
  stage: test
  script:
      - cd test/unit/bin
      - sudo ./test_all_unit --gtest_filter=*:-RetrieveSensorData.store_* --gtest_output="xml:report.xml"
      - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src/
      - mkdir -p coverage
      - lcov --capture --directory $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src --output-file coverage/coverage.info
      - genhtml coverage/coverage.info --output-directory coverage
  dependencies: 
    - build:alltests_pi
  artifacts:
    paths:
      - $CI_PROJECT_DIR/test/unit/bin/coverage
    reports:
      junit: $CI_PROJECT_DIR/test/unit/bin/report.xml
  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build
    - sudo rm -f $CI_PROJECT_DIR/test/unit/bin/test_all_unit

clean_docker:
  tags:
    - crossplatform

  only:
   - schedules

  stage: clean

  script: docker-compose down

build:alltests_quick:
  tags:
  - crossplatform
  
  except:
   - schedules
   - merge_requests
  
  stage: build
  script:
    - docker-compose up -d
    - docker cp . arm_v6_raspberrypi_one:/home/gitlab-runner/code/
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/code && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug .."
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/code && mkdir -p build && cd build && cmake --build . --target test_all_unit"
    - docker cp arm_v6_raspberrypi_one:/home/gitlab-runner/code/test/unit/bin/test_all_unit test/unit/bin/test_all_unit

  artifacts:
    paths:
      - $CI_PROJECT_DIR/test/unit/bin/test_all_unit

test:alltests_quick:
  tags:
  - raspberrypi

  except:
   - schedules
   - merge_requests
  
  stage: test
  script:
    - cd test/unit/bin
    - sudo -E ./test_all_unit --gtest_filter=*:-RetrieveSensorData.store_* --gtest_output="xml:report.xml"
    - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src/
    - mkdir -p coverage
    - lcov --capture --directory $CI_PROJECT_DIR/build/test/CMakeFiles/test_all_unit.dir/__/src --output-file coverage/coverage.info
    - genhtml coverage/coverage.info --output-directory coverage
  dependencies: 
    - build:alltests_quick
  artifacts:
    paths:
      - $CI_PROJECT_DIR/build/test/coverage
    reports:
      junit: $CI_PROJECT_DIR/test/unit/bin/report.xml
  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner $CI_PROJECT_DIR/build

build:mainapp_quick:
  tags:
    - crossplatform

  only:
    - schedules
    - merge_requests

  stage: build
  script:
    - docker-compose up -d
    - docker cp . arm_v6_raspberrypi_one:/home/gitlab-runner/code/
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/code && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug .."
    - docker exec -i --user gitlab-runner arm_v6_raspberrypi_one bash -c "cd /home/gitlab-runner/code && mkdir -p build && cd build && cmake --build . --target weatherStationPlus"
    - mkdir -p bin/debug
    - docker cp arm_v6_raspberrypi_one:/home/gitlab-runner/code/bin/debug/weatherStationPlus bin/debug/

  artifacts:
    paths:
      - $CI_PROJECT_DIR/bin/debug/weatherStationPlus

deploy:
  tags:
    - raspberrypi

  only:
    - schedules
    - merge_requests

  stage: deploy
  script:
    - sudo ./bin/debug/weatherStationPlus &
  dependencies:
    - build:mainapp_quick

  when: manual
